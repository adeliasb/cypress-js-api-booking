name: Cypress API Tests

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  cypress-run:
    runs-on: ubuntu-latest
    steps:
      # 1️⃣ Pega o código do repositório
      - name: Checkout do código
        uses: actions/checkout@v4

      # 2️⃣ Cache do Node Modules para acelerar builds
      - name: Cache Node modules
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      # 3️⃣ Instala dependências do projeto
      - name: Instalar dependências
        run: npm install

      # 4️⃣ Cache do Cypress Binary
      - name: Cache Cypress Binary
        uses: actions/cache@v3
        with:
          path: ~/.cache/Cypress
          key: ${{ runner.os }}-cypress-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-cypress-

      # 5️⃣ Instala o binário do Cypress (necessário para CI)
      - name: Instalar Cypress Binary
        run: npx cypress install

      # 6️⃣ Executa os testes Cypress em modo headless
      - name: Run Cypress Tests
        run: npx cypress run

      # 7️⃣ Combina todos os relatórios JSON em um único
      - name: Generate Mochawesome Report
        run: npx mochawesome-merge cypress/reports/*.json > cypress/reports/report.json

      # 8️⃣ Gera o relatório HTML a partir do JSON combinado
      - name: Create HTML report
        run: npx mochawesome-report-generator cypress/reports/report.json -o cypress/reports

      # 9️⃣ Publica o relatório HTML como artefato do workflow
      - name: Upload HTML report
        uses: actions/upload-artifact@v4
        with:
          name: cypress-report
          path: cypress/reports/
